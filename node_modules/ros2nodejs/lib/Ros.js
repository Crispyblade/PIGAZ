"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ros = void 0;
const events_1 = require("events");
const ws_1 = __importDefault(require("ws"));
const crypto_1 = require("crypto");
class Ros extends events_1.EventEmitter {
    constructor(url) {
        super();
        this.url = url;
        this.onOpen = this.onOpen.bind(this);
        this.onClose = this.onClose.bind(this);
        this.onMessage = this.onMessage.bind(this);
    }
    open() {
        this.ws = new ws_1.default(this.url);
        this.ws.on('open', this.onOpen);
        this.ws.on('close', this.onClose);
        this.ws.on('message', this.onMessage);
    }
    close() {
        var _a;
        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.close();
    }
    onOpen() {
        this.emit('open');
    }
    onClose() {
        this.emit('close');
    }
    onMessage(data) {
        const message = JSON.parse(data);
        if (message.op === 'publish') {
            this.emit(message.topic, message.msg);
        }
        else if (message.op === 'service_response') {
            this.emit(message.id, message);
        }
        else if (message.op === 'call_service') {
            this.emit(message.service, message);
        }
        else if (message.op === 'status') {
            if (message.id) {
                this.emit('status:' + message.id, message);
            }
            else {
                this.emit('status', message);
            }
        }
        else if (message.op === 'action_response') {
            this.emit(message.id, message);
        }
    }
    send(message) {
        var _a;
        (_a = this.ws) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(message));
    }
    getRandomUUID() {
        return (0, crypto_1.randomUUID)();
    }
}
exports.Ros = Ros;
