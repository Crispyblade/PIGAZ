"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = void 0;
class Service {
    constructor(ros, name, messageType) {
        this.isAdvertised = false;
        this.ros = ros;
        this.name = name;
        this.serviceType = messageType;
        this.serviceResponse = this.serviceResponse.bind(this);
    }
    callService(request, callback, failedCallback) {
        const ID = this.ros.getRandomUUID();
        this.ros.once(ID, (message) => {
            if (message.result !== undefined && message.result === false) {
                failedCallback === null || failedCallback === void 0 ? void 0 : failedCallback(message.values);
            }
            else {
                callback === null || callback === void 0 ? void 0 : callback(message.values);
            }
        });
        this.ros.send({
            op: 'call_service',
            id: ID,
            service: this.name,
            type: this.serviceType,
            args: request,
        });
    }
    advertise(callback) {
        if (this.isAdvertised) {
            return;
        }
        this.serviceCallback = callback;
        this.ros.on(this.name, this.serviceResponse);
        this.ros.send({
            op: 'advertise_service',
            service: this.name,
            type: this.serviceType,
        });
        this.isAdvertised = true;
    }
    unadvertise() {
        if (!this.isAdvertised) {
            return;
        }
        this.ros.off(this.name, this.serviceResponse);
        this.ros.send({
            op: 'unadvertise_service',
            service: this.name,
        });
        this.isAdvertised = false;
    }
    serviceResponse(request) {
        var _a;
        const response = {};
        const success = (_a = this.serviceCallback) === null || _a === void 0 ? void 0 : _a.call(this, request.args, response);
        this.ros.send({
            op: 'service_response',
            service: this.name,
            values: response,
            result: success,
            id: request.id,
        });
    }
}
exports.Service = Service;
